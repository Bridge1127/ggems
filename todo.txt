- Améliorer le random Poisson et Gauss ?

- Faire un installer pratique pour Windows, MAC et Linux

- Faire la visu avec Qt (Qt Quick) et activer l'option Qt à partir du CMAKE. Si possible, faire la visualization sur carte graphique avec OpenCL

- Dessiner les particules :
  * Photon -> vert
  * Positron -> rouge
  * Electron -> bleu

- Documentation avec Sphinx + Doxygen + LXR ou site .io avec doc

- Site internet GGEMS

- Faire source indépendantes sans lancer la simulation complète -> phase space

- Licence pour GGEMS

- Généraliser le OpenCL manager à plusieurs contexts (pour la reconstruction CT plus tard)

- Complétion automatique python

- Faire des exemples et benchmarks

- Faire une class singleton qui gère la mémoire RAM et diviser la gestion de la mémoire en section:
  * particules
  * navigateur : fantome + detecteur
  * source
  * etc...

- Faire diagramme avec Drawio pour clarifier code

- Exemples et benchmark C++

- Vérifier l'indexation pour le cross section buffer, peut etre pb de int et short

- Fixer le nombre de particles à 2^21 (2097152) dans un buffer multiple de 32 ??? Controler la multiplicité des buffers OpenCL