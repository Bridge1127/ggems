/*!
  \file GGEMSPhantomCreatorManager.cc

  \brief Singleton class generating voxelized phantom from analytical volume

  \author Julien BERT <julien.bert@univ-brest.fr>
  \author Didier BENOIT <didier.benoit@inserm.fr>
  \author LaTIM, INSERM - U1101, Brest, FRANCE
  \version 1.0
  \date Thursday January 9, 2020
*/

#include "GGEMS/geometry/GGEMSPhantomCreatorManager.hh"
#include "GGEMS/tools/GGEMSPrint.hh"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSPhantomCreatorManager::GGEMSPhantomCreatorManager(void)
: element_sizes_(GGdouble3{0.0, 0.0, 0.0}),
  phantom_dimensions_(GGuint3{0, 0, 0}),
  output_MHD_basename_("")
{
  GGcout("GGEMSPhantomCreatorManager", "GGEMSPhantomCreatorManager", 3)
    << "Allocation of Phantom Creator Manager singleton..." << GGendl;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSPhantomCreatorManager::~GGEMSPhantomCreatorManager(void)
{
  GGcout("GGEMSPhantomCreatorManager", "~GGEMSPhantomCreatorManager", 3)
    << "Deallocation of Phantom Creator Manager singleton..." << GGendl;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSPhantomCreatorManager::SetElementSizes(GGdouble const& voxel_width,
  GGdouble const& voxel_height, GGdouble const& voxel_depth)
{
  element_sizes_.s[0] = voxel_width;
  element_sizes_.s[1] = voxel_height;
  element_sizes_.s[2] = voxel_depth;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSPhantomCreatorManager::SetPhantomDimensions(
  GGuint const& phantom_width, GGuint const& phantom_height,
  GGuint const& phantom_depth)
{
  phantom_dimensions_.s[0] = phantom_width;
  phantom_dimensions_.s[1] = phantom_height;
  phantom_dimensions_.s[2] = phantom_depth;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSPhantomCreatorManager::SetOutputBasename(
  char const* output_MHD_basename)
{
  std::string output_MHD_basename_str(output_MHD_basename);
  output_MHD_basename_ = output_MHD_basename_str;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSPhantomCreatorManager* get_instance_phantom_creator_manager(void)
{
  return &GGEMSPhantomCreatorManager::GetInstance();
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void set_phantom_dimension_phantom_creator_manager(
  GGEMSPhantomCreatorManager* phantom_creator_manager,
  GGuint const phantom_width, GGuint const phantom_height,
  GGuint const phantom_depth)
{
  phantom_creator_manager->SetPhantomDimensions(phantom_width, phantom_height,
    phantom_depth);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void set_element_sizes_phantom_creator_manager(
  GGEMSPhantomCreatorManager* phantom_creator_manager,
  GGdouble const voxel_width, GGdouble const voxel_height,
  GGdouble const voxel_depth)
{
  phantom_creator_manager->SetElementSizes(voxel_width, voxel_height,
    voxel_depth);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void set_output_basename_phantom_creator_manager(
  GGEMSPhantomCreatorManager* phantom_creator_manager,
  char const* output_MHD_basename)
{
  phantom_creator_manager->SetOutputBasename(output_MHD_basename);
}
