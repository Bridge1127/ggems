/*!
  \file ggems_source_manager.cc

  \brief GGEMS class managing the source in GGEMS, every new sources in GGEMS
  inherit from this class

  \author Julien BERT <julien.bert@univ-brest.fr>
  \author Didier BENOIT <didier.benoit@inserm.fr>
  \author LaTIM, INSERM - U1101, Brest, FRANCE
  \version 1.0
  \date Tuesday October 15, 2019
*/

#include <algorithm>

#include "GGEMS/sources/ggems_source_manager.hh"
#include "GGEMS/tools/print.hh"
#include "GGEMS/global/ggems_constants.hh"
#include "GGEMS/tools/functions.hh"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSSourceManager* GGEMSSourceManager::p_current_source_ = nullptr;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSSourceManager::GGEMSSourceManager()
: is_initialized_(false),
  particle_type_(-1)
{
  GGEMScout("GGEMSSourceManager", "GGEMSSourceManager", 1)
    << "Allocation of GGEMSSourceManager..." << GGEMSendl;

  // Initialization of source position
  source_position_ = Matrix::MakeFloatXYZZeros();

  // Initialization of the source orbiting angles
  source_orbiting_angle_ = Matrix::MakeFloatXYZZeros();

  // Initialization of local axis
  local_axis_ = Matrix::MakeFloat3x3Zeros();

  // Initialization of matrix transformation
  transformation_matrix_ = Matrix::MakeFloat4x4Zeros();

  // Storing the pointer
  p_current_source_ = this;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

GGEMSSourceManager::~GGEMSSourceManager(void)
{
  GGEMScout("GGEMSSourceDefinition", "~GGEMSSourceDefinition", 1)
    << "Deallocation of GGEMSSourceDefinition..." << GGEMSendl;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSSourceManager::DeleteInstance(void)
{
  if (p_current_source_)
  {
    delete p_current_source_;
    p_current_source_ = nullptr;
  }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

bool GGEMSSourceManager::IsReady(void) const
{
  return is_initialized_;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSSourceManager::SetPosition(float const& pos_x, float const& pos_y,
  float const& pos_z)
{
  source_position_ = Matrix::MakeFloatXYZ(pos_x, pos_y, pos_z);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSSourceManager::SetParticleType(char const* particle_type)
{
  // Convert the particle type in string
  std::string particle_type_str(particle_type);

  // Transform the string to lower character
  std::transform(particle_type_str.begin(), particle_type_str.end(),
    particle_type_str.begin(), ::tolower);

  if (!particle_type_str.compare("photon")) {
    particle_type_ = ParticleName::PHOTON;
  }
  else if (!particle_type_str.compare("electron")) {
    particle_type_ = ParticleName::ELECTRON;
  }
  else
  {
    Misc::ThrowException("GGEMSSourceManager", "SetParticleType",
      "Unknown particle!!!");
  }
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void GGEMSSourceManager::SetLocalAxis(
  float const& m00, float const& m01, float const& m02,
  float const& m10, float const& m11, float const& m12,
  float const& m20, float const& m21, float const& m22)
{
  local_axis_ = Matrix::MakeFloat3x3(
    m00, m01, m02,
    m10, m11, m12,
    m20, m21, m22
  );
}
